{
    "/uniUI/docs/": {
        "title": "Welcome",
        "text": "Welcome! This is the documentation for the simple-to-use UI library for Roblox, called uniUI. This is a lightweight module, made for developer comfort, we have a Discord server, and a GitHub which gets checked regularly. Watch out! Even though I try to maintain this library and it's documentation as much as possible, it's not an guarantee that it will always be supported. If you are new to uniUI, we recommend to check out the installation guide down below. Quick start guide To follow this guide, you will need: A computer that supports Roblox Studio A Roblox account. Reasonable experience with the Roblox Studio Experience with Roblox If you don't have experience with Roblox Studio yet, there's plenty of starter guides to find on YouTube, or you can follow one of the built-in studio tutorials as well! Getting the source code Please get the source code from a trusted source to make sure you are using a genuine version of uniUI. GitHub To get the source code from GitHub, navigate to the  latest source code file  and click the \"Copy raw file\" button. You can now continue to the next step! Discord If you are in the Discord server, you can get your module by downloading the file from the source-code channel and then copying the file's contents onto your clipboard, you can do this by opening it in an executable like Notepad. Installing uniUI Now that you have the source code on your clipboard, you'll have to add it into your Roblox experience. uniUI is a module, as such it is supposed to be situated in a ModuleScript, you will have to create one and put the code you have from your clipboard in there. The ModuleScript can be situated anywhere, as long as it's accessible by the scripts you want it to use. Calling uniUI in a script Now that uniUI has been installed, you can call it in scripts as shown in the example below. Luau local  path  =  REPLACE_WITH_UNIUI_LOCATION  -- Specify the uniUI location. \n \n local  uniUI  =  require (path)  -- Call the module, it will initialize. Making your first UI After the installation has been finished, you can now use the module however you wish. Below is an example of how to create a simple  ScreenGui  and a  Frame . Luau -- This code assumes uniUI has been set and initialized in \"uniUI\" \n \n local  base  =  uniUI.base. new ( \"ScreenGui\" ,  game .Players.LocalPlayer.PlayerGui) \n -- This function creates a new UI \"base\" such as a ScreenGui. \n \n local  frame  =  uniUI.object. new ( \"Frame\" , base, {Size = UDim2. new ( 1 ,  0 ,  1 ,  0 )}) \n -- This function creates a new Frame. Happy coding! Making coding UI fun"
    }
}